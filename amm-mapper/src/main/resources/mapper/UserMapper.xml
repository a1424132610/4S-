<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fours.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.fours.domain.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fours.domain.User" useGeneratedKeys="true" keyProperty="id" >
    insert into t_user (username, password)
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.fours.domain.User" >
    update t_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, username, password
    from t_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, username, password
    from t_user
  </select>

  <!--通过username来查找对应的user-->
  <select id="selectUserByUsername" resultMap="BaseResultMap">
    SELECT * FROM t_user WHERE username = #{username}
  </select>


  <select id="selectPermissionByUser" resultType="String" >
    SELECT tr.sn sn FROM t_user u JOIN user_role ur ON u.id = ur.user_id
    JOIN t_role r ON ur.role_id = r.id
    JOIN role_permission rp ON r.id = rp.role_id
    JOIN t_permission p ON rp.permission_id = p.id
    JOIN t_resource tr ON p.resource_id = tr.id WHERE u.id = #{id}
  </select>

</mapper>